--------------------------------本地仓库
-----------创建仓库
建立本地仓库：
git init
进行添加和提交操作：
git add .
git commit -m "添加文件"

-----------Add操作
添加单个改动文件，如：readme.txt
git add readme.txt
添加所有改变的文件，有如下几种区别：
//表示添加所有内容
git add -A
//表示添加新文件和编辑过的文件不包括删除的文件
git add .
//表示添加编辑或者删除的文件，不包括新添加的文件
git add -u
添加同时提交内容
git commit -am"添加并提交到仓库"
-------------其他
git status
git status 以查看在你上次提交之后是否有修改。
我演示该命令的时候加了 -s 参数，以获得简短的结果输出。如果没加该参数会详细输出内容：

git diff
执行 git diff 来查看执行 git status 的结果的详细信息。
git diff 命令显示已写入缓存与已修改但尚未写入缓存的改动的区别。git diff 有两个主要的应用场景。
	尚未缓存的改动：git diff
	查看已缓存的改动： git diff --cached
	查看已缓存的与未缓存的所有改动：git diff HEAD
	显示摘要而非整个 diff：git diff --stat
--------------------------------远程仓库
添加一个新的远程仓库：
git remote add [shortname] [url]
把远程仓库clone到本地：
git clone [url]
查看当前配置有哪些远程库，-v还可以看到每个别名的实际链接地址：
git remote

Git 有两个命令用来提取远程仓库的更新。
1、从远程仓库下载新分支与数据：
git fetch
该命令执行完后需要执行git merge 远程分支到你所在的分支。
2、从远端仓库提取数据并尝试合并到当前分支：
git merge
该命令就是在执行 git fetch 之后紧接着执行 git merge 远程分支到你所在的任意分支。

推送你的新分支与数据到某个远端仓库命令：
git push [alias] [branch]
以上命令将你的 [branch] 分支推送成为 [alias] 远程仓库上的 [branch] 分支

删除远程仓库：
git remote rm [别名]
获取最新版本 ?有两种 ?拉取 和 获取 pull 和 fetchgit ?pull ? ? 从远程拉取最新版本 到本地 ?自动合并 merge ? ? ? ? ? ?git pull origin mastergit ?fetch ? 从远程获取最新版本 到本地 ? 不会自动合并 merge ? ?git fetch ?origin master

---------------------------------分支操作
查看分支
  git branch
创建分支
  git branch <name>
切换分支
  git checkout <name>
创建+切换分支
  git checkout -b <name>
合并某分支到当前分支
  git merge <name>
删除本地分支
  git branch -d <name>
查看远程分支列表
  git branch -a
  绿色代表当前项目所在的分支，红色就是远程分支列表
提交该分支到远程仓库(即：在远程创建dev分支，并提交内容)：
  git push origin dev
从远程获取dev分支内容：
  git pull origin dev
或者通过用命令行，运行 git fetch，可以将远程分支信息获取到本地,
再运行 git checkout -b local-branchname origin/remote_branchname
就可以将远程分支映射到本地命名为local-branchname 的一分支
删除远程分支
  git push origin --delete <branchName>
重命名本地分支
  git branch -m <oldbranch> <newbranch>
重命名远程分支
  先删除远程分支，然后重命名本地分支，再重新提交一个远程分支